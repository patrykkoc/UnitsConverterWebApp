@model UnitsConverterWebApp.Models.Unit
@System.Globalization.CultureInfo.CurrentUICulture

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Unit</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Symbol" class="control-label"></label>
                <input asp-for="Symbol" class="form-control" />
                <span asp-validation-for="Symbol" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CategoryId" class="control-label"></label>
                <select asp-for="CategoryId" class="form-control" asp-items="ViewBag.CategoryList"></select>
                <span asp-validation-for="CategoryId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="MultiplierToBase" class="control-label"></label>
                <input asp-for="MultiplierToBase" class="form-control"   />
                <span asp-validation-for="MultiplierToBase" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="OffsetToBase" class="control-label"></label>
                <input asp-for="OffsetToBase" class="form-control"   />
                <span asp-validation-for="OffsetToBase" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsBaseUnit" /> @Html.DisplayNameFor(model => model.IsBaseUnit)
                </label>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
    
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Override the default jQuery validation number method to accept comma or dot as decimal separator
        $.validator.methods.number = function (value, element) {
            return this.optional(element) || /^-?(?:\d+|\d{1,3}(?:[\s.,]\d{3})*)(?:[.,]\d+)?$/.test(value);
        };
    </script>
}
