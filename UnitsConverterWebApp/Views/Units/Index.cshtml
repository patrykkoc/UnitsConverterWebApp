@model IEnumerable<UnitsConverterWebApp.Models.Unit>

@{
    ViewData["Title"] = "Units";
    int pageNumber = ViewData["PageNumber"] != null ? (int)ViewData["PageNumber"] : 1;
    int totalPages = ViewData["TotalPages"] != null ? (int)ViewData["TotalPages"] : 1;
}

<h1>Units</h1>

 @if (Context.Session.GetString("Role") == "Admin")
                {
                <p>
                    <a asp-action="Create">Create New</a>
                </p> 
                }
<form method="get" asp-action="Index">
    <div class="form-group">
        <input type="text" name="searchString" value="@ViewData["CurrentFilter"]" class="form-control" placeholder="Search by Name" />
    </div>
    <button type="submit" class="btn btn-primary mb-3">Search</button>
</form>

<table class="table">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.Name)</th>
            <th>@Html.DisplayNameFor(model => model.Symbol)</th>
            <th>@Html.DisplayNameFor(model => model.Category)</th>
            <th>@Html.DisplayNameFor(model => model.MultiplierToBase)</th>
            <th>@Html.DisplayNameFor(model => model.OffsetToBase)</th>
            <th>@Html.DisplayNameFor(model => model.IsBaseUnit)</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <a asp-controller="Units" asp-action="Details" asp-route-id="@item.Id">
                        @item.Name
                    </a>
                </td>
                <td>@Html.DisplayFor(modelItem => item.Symbol)</td>
                <td>
                    <a asp-controller="Categories" asp-action="Details" asp-route-id="@item.CategoryId">
                        @item.Category.Name
                    </a>
                </td>
                <td>@Html.DisplayFor(modelItem => item.MultiplierToBase)</td>
                <td>@Html.DisplayFor(modelItem => item.OffsetToBase)</td>
                <td>@Html.DisplayFor(modelItem => item.IsBaseUnit)</td>
                @if (Context.Session.GetString("Role") == "Admin")
                {
                <td>
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
                }
            </tr>
        }
    </tbody>
</table>


    <nav aria-label="Page navigation">
        <ul class="pagination">
            <li class="page-item @(pageNumber == 1 ? "disabled" : "")">
                <a class="page-link" asp-action="Index" asp-route-pageNumber="@(pageNumber - 1)" asp-route-searchString="@ViewData["CurrentFilter"]">Previous</a>
            </li>

            @for (int i = 1; i <= totalPages; i++)
            {
                <li class="page-item @(i == pageNumber ? "active" : "")">
                    <a class="page-link" asp-action="Index" asp-route-pageNumber="@i" asp-route-searchString="@ViewData["CurrentFilter"]">@i</a>
                </li>
            }

            <li class="page-item @(pageNumber == totalPages ? "disabled" : "")">
                <a class="page-link" asp-action="Index" asp-route-pageNumber="@(pageNumber + 1)" asp-route-searchString="@ViewData["CurrentFilter"]">Next</a>
            </li>
        </ul>
    </nav>
 
